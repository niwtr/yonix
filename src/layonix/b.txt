dd if=/dev/zero of=xv6.img count=10000
dd if=bootblock of=xv6.img conv=notrunc
dd if=kernel of=xv6.img seek=1 conv=notrunc
qemu-system-i386 -serial mon:stdio -drive file=swap.img,index=2,format=raw -drive file=fs.img,index=1,format=raw -drive file=xv6.img,index=0,format=raw -smp 1 -m 512 
xv6...
free memory: 30MB
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
init: forked:2
$ ls
.              1 1 512
..             1 1 512
README         2 2 2517
cat            2 3 14032
echo           2 4 13104
forktest       2 5 8976
grep           2 6 15852
init           2 7 13760
kill           2 8 13156
ln             2 9 13052
ls             2 10 15280
mkdir          2 11 13176
rm             2 12 13152
sh             2 13 23796
stressfs       2 14 13832
usertests      2 15 52996
schedtest      2 16 14620
threadtest     2 17 15052
setsched       2 18 13340
dstest         2 19 15980
sematest       2 20 14924
wc             2 21 14684
zombie         2 22 12884
consumer       2 23 16760
console        3 24 0
$ ls -l
ls: cannot open -l
$ ls
.              1 1 512
..             1 1 512
README         2 2 2517
cat            2 3 14032
echo           2 4 13104
forktest       2 5 8976
grep           2 6 15852
init           2 7 13760
kill           2 8 13156
ln             2 9 13052
ls             2 10 15280
mkdir          2 11 13176
rm             2 12 13152
sh             2 13 23796
stressfs       2 14 13832
usertests      2 15 52996
schedtest      2 16 14620
threadtest     2 17 15052
setsched       2 18 13340
dstest         2 19 15980
sematest       2 20 14924
wc             2 21 14684
zombie         2 22 12884
consumer       2 23 16760
console        3 24 0
$ ls
.              1 1 512
..             1 1 512
README         2 2 2517
cat            2 3 14032
echo           2 4 13104
forktest       2 5 8976
grep           2 6 15852
init           2 7 13760
kill           2 8 13156
ln             2 9 13052
ls             2 10 15280
mkdir          2 11 13176
rm             2 12 13152
sh             2 13 23796
stressfs       2 14 13832
usertests      2 15 52996
schedtest      2 16 14620
threadtest     2 17 15052
setsched       2 18 13340
dstest         2 19 15980
sematest       2 20 14924
wc             2 21 14684
zombie         2 22 12884
consumer       2 23 16760
console        3 24 0
$ ls
.              1 1 512
..             1 1 512
README         2 2 2517
cat            2 3 14032
echo           2 4 13104
forktest       2 5 8976
grep           2 6 15852
init           2 7 13760
kill           2 8 13156
ln             2 9 13052
ls             2 10 15280
mkdir          2 11 13176
rm             2 12 13152
sh             2 13 23796
stressfs       2 14 13832
usertests      2 15 52996
schedtest      2 16 14620
threadtest     2 17 15052
setsched       2 18 13340
dstest         2 19 15980
sematest       2 20 14924
wc             2 21 14684
zombie         2 22 12884
consumer       2 23 16760
console        3 24 0
$ k 
1 init SSLEEPING proc ts:90 avgslp:100 dpri:125 chan:801140c0
2 sh SSLEEPING proc ts:90 avgslp:47 dpri:125 chan:801123e0

1 init SSLEEPING proc ts:90 avgslp:100 dpri:125 chan:801140c0
2 sh SSLEEPING proc ts:90 avgslp:47 dpri:125 chan:801123e0
ls' 
.              1 1 512
..             1 1 512
README         2 2 2517
cat            2 3 14032
echo           2 4 13104
forktest       2 5 8976
grep           2 6 15852
init           2 7 13760
kill           2 8 13156
ln             2 9 13052
ls             2 10 15280
mkdir          2 11 13176
rm             2 12 13152
sh             2 13 23796
stressfs       2 14 13832
usertests      2 15 52996
schedtest      2 16 14620
threadtest     2 17 15052
setsched       2 18 13340
dstest         2 19 15980
sematest       2 20 14924
wc             2 21 14684
zombie         2 22 12884
consumer       2 23 16760
console        3 24 0
$ ls
.              1 1 512
..             1 1 512
README         2 2 2517
cat            2 3 14032
echo           2 4 13104
forktest       2 5 8976
grep           2 6 15852
init           2 7 13760
kill           2 8 13156
ln             2 9 13052
ls             2 10 15280
mkdir          2 11 13176
rm             2 12 13152
sh             2 13 23796
stressfs       2 14 13832
usertests      2 15 52996
schedtest      2 16 14620
threadtest     2 17 15052
setsched       2 18 13340
dstest         2 19 15980
sematest       2 20 14924
wc             2 21 14684
zombie         2 22 12884
consumer       2 23 16760
console        3 24 0
$ 
1 init SSLEEPING proc ts:90 avgslp:100 dpri:125 chan:801140c0
2 sh SSLEEPING proc ts:90 avgslp:99 dpri:125 chan:801123e0
ls
.              1 1 512
..             1 1 512
README         2 2 2517
cat            2 3 14032
echo           2 4 13104
forktest       2 5 8976
grep           2 6 15852
init           2 7 13760
kill           2 8 13156
ln             2 9 13052
ls             2 10 15280
mkdir          2 11 13176
rm             2 12 13152
sh             2 13 23796
stressfs       2 14 13832
usertests      2 15 52996
schedtest      2 16 14620
threadtest     2 17 15052
setsched       2 18 13340
dstest         2 19 15980
sematest       2 20 14924
wc             2 21 14684
zombie         2 22 12884
consumer       2 23 16760
console        3 24 0
$ 
1 init SSLEEPING proc ts:90 avgslp:100 dpri:125 chan:801140c0
2 sh SSLEEPING proc ts:80 avgslp:98 dpri:125 chan:801123e0
ls
.              1 1 512
..             1 1 512
README         2 2 2517
cat            2 3 14032
echo           2 4 13104
forktest       2 5 8976
grep           2 6 15852
init           2 7 13760
kill           2 8 13156
ln             2 9 13052
ls             2 10 15280
mkdir          2 11 13176
rm             2 12 13152
sh             2 13 23796
stressfs       2 14 13832
usertests      2 15 52996
schedtest      2 16 14620
threadtest     2 17 15052
setsched       2 18 13340
dstest         2 19 15980
sematest       2 20 14924
wc             2 21 14684
zombie         2 22 12884
consumer       2 23 16760
console        3 24 0
$ 
1 init SSLEEPING proc ts:90 avgslp:100 dpri:125 chan:801140c0
2 sh SSLEEPING proc ts:80 avgslp:99 dpri:125 chan:801123e0

1 init SSLEEPING proc ts:90 avgslp:100 dpri:125 chan:801140c0
2 sh SSLEEPING proc ts:80 avgslp:99 dpri:125 chan:801123e0

1 init SSLEEPING proc ts:90 avgslp:100 dpri:125 chan:801140c0
2 sh SSLEEPING proc ts:80 avgslp:99 dpri:125 chan:801123e0
ls
.              1 1 512
..             1 1 512
README         2 2 2517
cat            2 3 14032
echo           2 4 13104
forktest       2 5 8976
grep           2 6 15852
init           2 7 13760
kill           2 8 13156
ln             2 9 13052
ls             2 10 15280
mkdir          2 11 13176
rm             2 12 13152
sh             2 13 23796
stressfs       2 14 13832
usertests      2 15 52996
schedtest      2 16 14620
threadtest     2 17 15052
setsched       2 18 13340
dstest         2 19 15980
sematest       2 20 14924
wc             2 21 14684
zombie         2 22 12884
consumer       2 23 16760
console        3 24 0
$ LS
exec LS failed
$ DSTES     dstest
I let's rock!
Thread 1 created.
Going high!
I am in level 1.
I am in level 2.
I am in level 3.
Going to level 2.
I am in level 2.
I am in level 3.
Going to level 1.
I am in level 1.
I am in level 2.
I am in level 3.
Going to level 1.
I am in level 1.
I am in level 2.
I am in level 3.
Going to level 1.
I am in level 1.
I am in level 2.
I am in level 3.
Going to level 1.
I am in level 1.
I am in level 2.
I am in level 3.
Going to level 1.
I am in level 1.
I am in level 2.
I am in level 3.
Going to level 1.
I am in level 1.
I am in level 2.
I am in level 3.
Going to level 1.
I am in level 1.
I am in level 2.
I am in level 3.
Going to level 1.
I am in level 1.
I am in level 2.
I am in level 3.
Going to level 1.
I am in level 1.
I am in level 2.
I am in level 3.
Going to thread main.
Returned directly from level3. 
joined.
$ ls
.              1 1 512
..             1 1 512
README         2 2 2517
cat            2 3 14032
echo           2 4 13104
forktest       2 5 8976
grep           2 6 15852
init           2 7 13760
kill           2 8 13156
ln             2 9 13052
ls             2 10 15280
mkdir          2 11 13176
rm             2 12 13152
sh             2 13 23796
stressfs       2 14 13832
usertests      2 15 52996
schedtest      2 16 14620
threadtest     2 17 15052
setsched       2 18 13340
dstest         2 19 15980
sematest       2 20 14924
wc             2 21 14684
zombie         2 22 12884
consumer       2 23 16760
console        3 24 0
$ j cat READDME   ME
xv6 is a re-implementation of Dennis Ritchie's and Ken Thompson's Unix
Version 6 (v6).  xv6 loosely follows the structure and style of v6,
but is implemented for a modern x86-based multiprocessor using ANSI C.

ACKNOWLEDGMENTS

xv6 is inspired by John Lions's Commentary on UNIX 6th Edition (Peer
to Peer Communications; ISBN: 1-57398-013-7; 1st edition (June 14,
2000)). See also http://pdos.csail.mit.edu/6.828/2016/xv6.html, which
provides pointers to on-line resources for v6.

xv6 borrows code from the following sources:
    JOS (asm.h, elf.h, mmu.h, bootasm.S, ide.c, console.c, and others)
    Plan 9 (entryother.S, mp.h, mp.c, lapic.c)
    FreeBSD (ioapic.c)
    NetBSD (console.c)

The following people have made contributions: Russ Cox (context switching,
locking), Cliff Frey (MP), Xiao Yu (MP), Nickolai Zeldovich, and Austin
Clements.

We are also grateful for the bug reports and patches contributed by Silas
Boyd-Wickizer, Cody Cutler, Mike CAT, Nelson Elhage, Nathaniel Filardo, Peter
Froehlich, Yakir Goaron, Shivam Handa, Bryan Henry, Jim Huang, Anders Kaseorg,
kehao95, Wolfgang Keller, Eddie Kohler, Imbar Marinescu, Yandong Mao, Hitoshi
Mitake, Carmi Merimovich, Joel Nider, Greg Price, Ayan Shafqat, Eldar Sehayek,
Yongming Shen, Cam Tenny, Rafael Ubal, Warren Toomey, Stephen Tu, Pablo Ventura,
Xi Wang, Keiichi Watanabe, Nicolas Wolovick, Jindong Zhang, and Zou Chang Wei.

The code in the files that constitute xv6 is
Copyright 2006-2016 Frans Kaashoek, Robert Morris, and Russ Cox.

ERROR REPORTS

If you spot errors or have suggestions for improvement, please send email to
Frans Kaashoek and Robert Morris (kaashoek,rtm@csail.mit.edu).  If you have
suggestions for improvements, please keep in mind that the main purpose of xv6
is as a teaching operating system for MIT's 6.828. For example, we are in
particular interested in simplifications and clarifications, instead of
suggestions for new systems calls, more portability, etc.

BUILDING AND RUNNING XV6

To build xv6 on an x86 ELF machine (like Linux or FreeBSD), run "make".
On non-x86 or non-ELF machines (like OS X, even on x86), you will
need to install a cross-compiler gcc suite capable of producing x86 ELF
binaries.  See http://pdos.csail.mit.edu/6.828/2016/tools.html.
Then run "make TOOLPREFIX=i386-jos-elf-".

To run xv6, install the QEMU PC simulators.  To run in QEMU, run "make qemu".

To create a typeset version of the code, run "make xv6.pdf".  This
requires the "mpage" utility.  See http://www.mesa.nl/pub/mpage/.
$ editr       ls
.              1 1 512
..             1 1 512
README         2 2 2517
cat            2 3 14032
echo           2 4 13104
forktest       2 5 8976
grep           2 6 15852
init           2 7 13760
kill           2 8 13156
ln             2 9 13052
ls             2 10 15280
mkdir          2 11 13176
rm             2 12 13152
sh             2 13 23796
stressfs       2 14 13832
usertests      2 15 52996
schedtest      2 16 14620
threadtest     2 17 15052
setsched       2 18 13340
dstest         2 19 15980
sematest       2 20 14924
wc             2 21 14684
zombie         2 22 12884
consumer       2 23 16760
console        3 24 0
$ 